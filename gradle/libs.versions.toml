[versions]
browser = "1.8.0"
coreSplashscreen = "1.0.1"
coreVersion = "12.1.2"
firebaseAppdistributionApiKtx = "16.0.0-beta15"
hamcrest = "3.0"
htmlconverter = "1.1.0"
htmlparser = "1.1.3"
imageViewer = "1.1.0-alpha.7"
jupiterVersion = "5.13.3"
accompanistPermissions = "0.37.3"
appUpdateKtx = "2.1.0"

agp = "8.11.1"
kotlin = "2.2.0"
kotlinx-datetime = "0.7.1"
kotlinx-immutable = "0.4.0"
ksoup = "0.2.4"
ksp = "2.2.0-2.0.2"

androidsvgAar = "1.4"
bitmap2video = "2.0.0"
bitmapsToMp4 = "1.0"
commonsIo = "2.19.0"

coil3 = "3.2.0"
coil = "2.7.0"
composeWebview = "0.33.6"
compilerKsp = "4.16.0"
activity-compose = "1.10.1"
compose-bom = "2025.06.01"
compose = "1.0.0-beta01"
composeImage = "1.2.2"
composeVideo = "1.2.0"
constraintlayoutCompose = "1.1.1"
fragulaCompose = "2.10.1"
hiltNavigationCompose = "1.2.0"

core = "1.16.0"
core-ktx = "1.16.0"
appcompat = "1.7.1"
desugar_jdk_libs = "2.1.5"
hilt = "2.56.2"

debugDb = "1.0.6"
downloadX = "1.0.5"
eventbus = "3.3.1"
file-picker = "v9.0.1"
fuel = "2.3.1"
jsoup = "1.21.1"
material = "1.12.0"
ksoupHtmlVersion = "0.6.0"
jetbrainsMarkdown = "0.7.3"
markwon = "4.6.2"

litr = "1.5.7"
materialIconsExtendedAndroid = "1.7.8"
mockitoKotlin = "5.4.0"
mockk = "1.14.4"
mockwebserver = "5.1.0"
multidex = "2.0.1"
junit = "4.13.2"
firebase-crashlytics = "3.0.4"

androidxFragment = "1.8.8"
androidxLifecycle = "2.9.1"
androidxRoom = "2.7.2"
androidxArchCore = "2.2.0"
androidXStartup = "1.2.0"

okhttp3DownloadprogressInterceptor = "1.0.1"
okhttp3Integration = "4.16.0"
orbit = "10.0.0"
pagingCompose = "3.3.6"
persistentcookiejar = "v1.0.3"
retrofit = "3.0.0"
okHttp = "5.1.0"
gson = "2.13.1"
coroutines = "1.10.2"
glide = "4.16.0"
recyclerView = "1.4.0"
richeditorCompose = "1.0.0-rc13"
rules = "1.6.1"
runner = "1.6.2"
runtimeTracing = "1.8.3"
tagsoup = "1.2.1"
timber = "5.0.1"
baselineProfiles = "1.4.1"
macroBenchmark = "1.3.4"
timeago = "4.1.0"
tracingPerfetto = "1.0.0"
uiAutomator = "2.3.0"
truth = "1.4.4"
turbine = "1.2.1"
robolectric = "4.15.1"
androidxTest = "1.6.1"
androidxTestJunit = "1.2.1"
androidTestRunner = "1.3.0-beta01"
espresso = "3.6.1"
constraintlayout = "2.2.1"
compileSdk = "36"
minSdk = "23"
targetSdk = "36"
kotPrefVersion = "2.13.2"
pagingVersion = "3.3.6"
navVersion = "2.9.1"
media3 = "1.7.1"
appVersionCode = "370"
xfetch2 = "3.1.6"
xlog = "1.11.1"
zxingAndroidEmbedded = "4.3.0"
googleService = "4.4.3"
firebaseBom = "33.16.0"
baselineprofile = "1.3.4"
junitKtx = "1.2.1"
compose-compiler = "1.5.15"
activityKtx = "1.10.1"
tedpermissionCoroutine = "3.4.2"
tedpermissionNormal = "3.4.2"
appdistribution = "5.1.1"
protobuf-plugin = "0.9.5"
protobuf = "4.31.1"
kotlinx-serialization-json = "1.9.0"
ktlint = "13.0.0"
detekt = "1.23.8"
android-gradle-plugin = "8.11.1"
androidx-navigation = "2.9.1"
javax-inject = "1"

compose-markdown = "0.5.7"

[libraries]
accompanist-permissions = { module = "com.google.accompanist:accompanist-permissions", version.ref = "accompanistPermissions" }
androidx-browser = { module = "androidx.browser:browser", version.ref = "browser" }
androidx-core = { module = "androidx.core:core", version.ref = "core" }
androidx-core-splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "coreSplashscreen" }
androidx-material-icons-extended-android = { module = "androidx.compose.material:material-icons-extended-android", version.ref = "materialIconsExtendedAndroid" }
androidx-rules = { module = "androidx.test:rules", version.ref = "rules" }
androidx-runner = { module = "androidx.test:runner", version.ref = "runner" }
androidx-tracing-perfetto = { module = "androidx.tracing:tracing-perfetto", version.ref = "tracingPerfetto" }
androidx-tracing-perfetto-binary = { module = "androidx.tracing:tracing-perfetto-binary", version.ref = "tracingPerfetto" }
androidyoutubeplayer-core = { module = "com.pierfrancescosoffritti.androidyoutubeplayer:core", version.ref = "coreVersion" }
fleeksoft-ksoup = { module = "com.fleeksoft.ksoup:ksoup", version.ref = "ksoup" }
scale-image-viewer = { module = "com.jvziyaoyao.scale:image-viewer", version.ref = "imageViewer" }
material = { module = "com.google.android.material:material", version.ref = "material" }
androidx-activity-ktx = { module = "androidx.activity:activity-ktx", version.ref = "activityKtx" }

htmlconverter = { module = "be.digitalia.compose.htmlconverter:htmlconverter", version.ref = "htmlconverter" }

#kotlin-bom
kotlin-bom = { module = "org.jetbrains.kotlin:kotlin-bom", version.ref = "kotlin" }
kotlin-metadata-jvm = { group = "org.jetbrains.kotlin", name = "kotlin-metadata-jvm" }
kotlin-stdlib-jdk8 = { group = "org.jetbrains.kotlin", name = "kotlin-stdlib-jdk8" }
kotlin-stdlib = { group = "org.jetbrains.kotlin", name = "kotlin-stdlib" }

caverock-androidsvg-aar = { module = "com.caverock:androidsvg-aar", version.ref = "androidsvgAar" }

#appdistribution
firebase-appdistribution = { module = "com.google.firebase:firebase-appdistribution", version.ref = "firebaseAppdistributionApiKtx" }
firebase-appdistribution-api-ktx = { module = "com.google.firebase:firebase-appdistribution-api-ktx", version.ref = "firebaseAppdistributionApiKtx" }

kevinnzou-compose-webview = { module = "io.github.kevinnzou:compose-webview", version.ref = "composeWebview" }

#glide
glide-ksp = { module = "com.github.bumptech.glide:ksp", version.ref = "compilerKsp" }
glide-compose = { module = "com.github.bumptech.glide:compose", version.ref = "compose" }
glide-okhttp3-integration = { module = "com.github.bumptech.glide:okhttp3-integration", version.ref = "okhttp3Integration" }

hamcrest = { module = "org.hamcrest:hamcrest", version.ref = "hamcrest" }

#MVI
orbit-compose = { module = "org.orbit-mvi:orbit-compose", version.ref = "orbit" }
orbit-core = { module = "org.orbit-mvi:orbit-core", version.ref = "orbit" }
orbit-test = { module = "org.orbit-mvi:orbit-test", version.ref = "orbit" }
orbit-viewmodel = { module = "org.orbit-mvi:orbit-viewmodel", version.ref = "orbit" }

richeditor-compose = { module = "com.mohamedrejeb.richeditor:richeditor-compose", version.ref = "richeditorCompose" }
tedpermission-coroutine = { module = "io.github.ParkSangGwon:tedpermission-coroutine", version.ref = "tedpermissionCoroutine" }
tedpermission-normal = { module = "io.github.ParkSangGwon:tedpermission-normal", version.ref = "tedpermissionNormal" }

#coil
coil3-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil3" }
coil3-okhttp = { module = "io.coil-kt.coil3:coil-network-okhttp", version.ref = "coil3" }
coil3-gif = { module = "io.coil-kt.coil3:coil-gif", version.ref = "coil3" }
coil3-video = { module = "io.coil-kt.coil3:coil-video", version.ref = "coil3" }

coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coil" }
coil-gif = { module = "io.coil-kt:coil-gif", version.ref = "coil" }
coil-video = { module = "io.coil-kt:coil-video", version.ref = "coil" }

#htmlparser
htmlparser = { module = "com.htmlparser:htmlparser", version.ref = "htmlparser" }
ksoup-html = { module = "com.mohamedrejeb.ksoup:ksoup-html", version.ref = "ksoupHtmlVersion" }
ksoup-entities = { module = "com.mohamedrejeb.ksoup:ksoup-entities", version.ref = "ksoupHtmlVersion" }
jsoup = { module = "org.jsoup:jsoup", version.ref = "jsoup" }
jetbrains-markdown = { module = "org.jetbrains:markdown", version.ref = "jetbrainsMarkdown" }

#junit
junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "jupiterVersion" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "jupiterVersion" }
junit-jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "jupiterVersion" }
junit-vintage-engine = { module = "org.junit.vintage:junit-vintage-engine", version.ref = "jupiterVersion" }

mockito-kotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockitoKotlin" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
okhttp3-mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "mockwebserver" }

persistentcookiejar = { module = "com.github.jozefchmelar:PersistentCookieJar", version.ref = "persistentcookiejar" }
smartToolfactory-compose-image = { module = "com.github.SmartToolFactory:Compose-Image", version.ref = "composeImage" }
sanghun-compose-video = { module = "io.sanghun:compose-video", version.ref = "composeVideo" }
core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "core-ktx" }
androidx-multidex = { module = "androidx.multidex:multidex", version.ref = "multidex" }
androidx-xfetch2 = { module = "androidx.tonyodev.fetch2:xfetch2", version.ref = "xfetch2" }
androidx-xfetch2okhttp = { module = "androidx.tonyodev.fetch2okhttp:xfetch2okhttp", version.ref = "xfetch2" }
bitmap2video = { module = "com.github.israel-fl:bitmap2video", version.ref = "bitmap2video" }
bitmapsToMp4 = { module = "com.github.YaphetZhao:bitmapsToMp4", version.ref = "bitmapsToMp4" }
commons-io = { module = "commons-io:commons-io", version.ref = "commonsIo" }
debug-db = { module = "com.amitshekhar.android:debug-db", version.ref = "debugDb" }
desugar-jdk-libs = { module = "com.android.tools:desugar_jdk_libs", version.ref = "desugar_jdk_libs" }
downloadX = { module = "com.github.ssseasonnn:DownloadX", version.ref = "downloadX" }
eventbus = { module = "org.greenrobot:eventbus", version.ref = "eventbus" }

#markwon
markwon-core = { module = "io.noties.markwon:core", version.ref = "markwon" }
markwon-ext-tables = { module = "io.noties.markwon:ext-tables", version.ref = "markwon" }
markwon-ext-strikethrough = { module = "io.noties.markwon:ext-strikethrough", version.ref = "markwon" }
markwon-image-glide = { module = "io.noties.markwon:image-glide", version.ref = "markwon" }
markwon-html = { module = "io.noties.markwon:html", version.ref = "markwon" }
markwon-linkify = { module = "io.noties.markwon:linkify", version.ref = "markwon" }
markwon-image = { module = "io.noties.markwon:image", version.ref = "markwon" }
markwon-image-coil = { module = "io.noties.markwon:image-coil", version.ref = "markwon" }
markwon-recycler-table = { module = "io.noties.markwon:recycler-table", version.ref = "markwon" }
markwon-syntax-highlight = { module = "io.noties.markwon:syntax-highlight", version.ref = "markwon" }

compose-markdown = { module = "com.github.jeziellago:compose-markdown", version.ref = "compose-markdown" }

#file-picker
file-picker = { module = "com.github.TutorialsAndroid:FilePicker", version.ref = "file-picker" }

#fragula
fragula-compose = { module = "com.fragula2:fragula-compose", version.ref = "fragulaCompose" }

#fuel - downloader
fuel = { module = "com.github.kittinunf.fuel:fuel", version.ref = "fuel" }
fuel-coroutines = { module = "com.github.kittinunf.fuel:fuel-coroutines", version.ref = "fuel" }
fuel-json = { module = "com.github.kittinunf.fuel:fuel-json", version.ref = "fuel" }

litr = { module = "com.linkedin.android.litr:litr", version.ref = "litr" }
litr-filters = { module = "com.linkedin.android.litr:litr-filters", version.ref = "litr" }

fragment-ktx = { module = "androidx.fragment:fragment-ktx", version.ref = "androidxFragment" }
androidx-arch-core = { module = "androidx.arch.core:core-testing", version.ref = "androidxArchCore" }
androidx-startup = { module = "androidx.startup:startup-runtime", version.ref = "androidXStartup" }

#compose
compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "compose-bom" }
compose-ui = { group = "androidx.compose.ui", name = "ui" }
compose-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
compose-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
compose-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
compose-material3 = { group = "androidx.compose.material3", name = "material3" }
compose-foundation-android = { group = "androidx.compose.foundation", name = "foundation-android" }
compose-runtime-tracing = { module = "androidx.compose.runtime:runtime-tracing", version.ref = "runtimeTracing" }
navigation-compose = { group = "androidx.navigation", name = "navigation-compose", version.ref = "androidx-navigation" }
hilt-navigation-compose = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "hiltNavigationCompose" }
constraintlayout-compose = { module = "androidx.constraintlayout:constraintlayout-compose", version.ref = "constraintlayoutCompose" }
paging-compose = { module = "androidx.paging:paging-compose", version.ref = "pagingCompose" }
activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activity-compose" }

#room
room-compiler = { group = "androidx.room", name = "room-compiler", version.ref = "androidxRoom" }
room-ktx = { group = "androidx.room", name = "room-ktx", version.ref = "androidxRoom" }
room-runtime = { group = "androidx.room", name = "room-runtime", version.ref = "androidxRoom" }
room-testing = { group = "androidx.room", name = "room-testing", version.ref = "androidxRoom" }

#lifecycle
androidx-lifecycle = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidxLifecycle" }
androidx-lifecycle-livedata = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "androidxLifecycle" }
androidx-lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidxLifecycle" }
androidx-lifecycle-service = { module = "androidx.lifecycle:lifecycle-service", version.ref = "androidxLifecycle" }
androidx-lifecycle-process = { module = "androidx.lifecycle:lifecycle-process", version.ref = "androidxLifecycle" }
lifecycle-compose = { group = "androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "androidxLifecycle" }
androidx-lifecycle-reactivestreams = { module = "androidx.lifecycle:lifecycle-reactivestreams-ktx", version.ref = "androidxLifecycle" }

#hilt
hilt-android = { group = "com.google.dagger", name = "hilt-android", version.ref = "hilt" }
hilt-core = { group = "com.google.dagger", name = "hilt-core", version.ref = "hilt" }
hilt-compiler = { group = "com.google.dagger", name = "hilt-compiler", version.ref = "hilt" }
hilt-android-testing = { group = "com.google.dagger", name = "hilt-android-testing", version.ref = "hilt" }
hilt-testing-compiler = { group = "com.google.dagger", name = "hilt-android-compiler", version.ref = "hilt" }

#worker
hilt-work = { group = "androidx.hilt", name = "hilt-work", version = "1.2.0" }
timeago = { module = "com.github.marlonlom:timeago", version.ref = "timeago" }
work-runtime-ktx = { module = "androidx.work:work-runtime-ktx", version = "2.10.2" }

#http
jobinlawrance-okhttp3-downloadprogress-interceptor = { module = "com.github.jobinlawrance:okhttp3-downloadprogress-interceptor", version.ref = "okhttp3DownloadprogressInterceptor" }
retrofit-gsonConverter = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }
retrofit-scalarsConverter = { module = "com.squareup.retrofit2:converter-scalars", version.ref = "retrofit" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
okhttp-logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okHttp" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okHttp" }

#kotlinx
kotlinx-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-serialization-json = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "kotlinx-serialization-json" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
kotlinx-datetime = { group = "org.jetbrains.kotlinx", name = "kotlinx-datetime", version.ref = "kotlinx-datetime" }
kotlinx-immutable = { group = "org.jetbrains.kotlinx", name = "kotlinx-collections-immutable", version.ref = "kotlinx-immutable" }

coroutines-retrofit2-adapter = "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2"

glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }
recyclerview = { module = "androidx.recyclerview:recyclerview", version.ref = "recyclerView" }
constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "constraintlayout" }
tagsoup = { module = "org.ccil.cowan.tagsoup:tagsoup", version.ref = "tagsoup" }
timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }

#firebase
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebaseBom" }
firebase-analytics = { module = "com.google.firebase:firebase-analytics-ktx" }
firebase-crashlytics = { module = "com.google.firebase:firebase-crashlytics-ktx" }

#paging
paging-common = { module = "androidx.paging:paging-common", version.ref = "pagingVersion" }
paging-runtime = { module = "androidx.paging:paging-runtime", version.ref = "pagingVersion" }

#log
xlog = { module = "com.elvishew:xlog", version.ref = "xlog" }

# unit test
androidx-junit-ktx = { group = "androidx.test.ext", name = "junit-ktx", version.ref = "junitKtx" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }
truth = { module = "com.google.truth:truth", version.ref = "truth" }
android-test-runner = { module = "com.android.support.test:runner", version.ref = "androidTestRunner" }
profileinstaller = { module = "androidx.profileinstaller:profileinstaller", version.ref = "baselineProfiles" }
macrobenchmark = { module = "androidx.benchmark:benchmark-macro-junit4", version.ref = "macroBenchmark" }
uiautomator = { module = "androidx.test.uiautomator:uiautomator", version.ref = "uiAutomator" }
androidx-test-core = { module = "androidx.test:core", version.ref = "androidxTest" }
androidx-junit = { module = "androidx.test.ext:junit", version.ref = "androidxTestJunit" }
androidx-espresso = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso" }
kotpref = { module = "com.chibatching.kotpref:kotpref", version.ref = "kotPrefVersion" }
kotprefLiveData = { module = "com.chibatching.kotpref:livedata-support", version.ref = "kotPrefVersion" }
kotprefGson = { module = "com.chibatching.kotpref:gson-support", version.ref = "kotPrefVersion" }
kotprefEnum = { module = "com.chibatching.kotpref:enum-support", version.ref = "kotPrefVersion" }
topjohnwu-libsu = { module = "com.github.topjohnwu.libsu:core", version = "6.0.0" }
compose-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
compose-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }

#navigation
navigation-fragment-ktx = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "navVersion" }
navigation-ui-ktx = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "navVersion" }
navigation-runtime-ktx = { module = "androidx.navigation:navigation-runtime-ktx", version.ref = "navVersion" }
viewbinding-prpperty-delegate = { module = "com.github.kirich1409:viewbindingpropertydelegate-noreflection", version = "1.5.9" }

#Exoplayer
media3-session = { module = "androidx.media3:media3-session", version.ref = "media3" }
media3-player = { module = "androidx.media3:media3-exoplayer", version.ref = "media3" }
media3-ui = { module = "androidx.media3:media3-ui", version.ref = "media3" }
media3-dash = { module = "androidx.media3:media3-exoplayer-dash", version.ref = "media3" }
media3-common = { group = "androidx.media3", name = "media3-common", version.ref = "media3" }
media3-exoplayer-ima = { group = "androidx.media3", name = "media3-exoplayer-ima", version.ref = "media3" }
media3-exoplayer-workmanager = { group = "androidx.media3", name = "media3-exoplayer-workmanager", version.ref = "media3" }

#barcode
zxing-android-embedded = { module = "com.journeyapps:zxing-android-embedded", version.ref = "zxingAndroidEmbedded" }

#in-app update
app-update-ktx = { module = "com.google.android.play:app-update-ktx", version.ref = "appUpdateKtx" }

protobuf-kotlin-lite = { group = "com.google.protobuf", name = "protobuf-kotlin-lite", version.ref = "protobuf" }
protobuf-protoc = { group = "com.google.protobuf", name = "protoc", version.ref = "protobuf" }

android-gradle-plugin = { group = "com.android.tools.build", name = "gradle", version.ref = "android-gradle-plugin" }
gitlab-detekt-plugin-formatting = { module = "io.gitlab.arturbosch.detekt:detekt-plugin-formatting", version.ref = "detekt" }
kotlin-gradle-plugin = { group = "org.jetbrains.kotlin", name = "kotlin-gradle-plugin", version.ref = "kotlin" }
ksp-gradle-plugin = { group = "com.google.devtools.ksp", name = "com.google.devtools.ksp.gradle.plugin", version.ref = "ksp" }
compose-compiler-plugins = { module = "org.jetbrains.kotlin:compose-compiler-gradle-plugin", version.ref = "kotlin" }

javax-inject = { group = "javax.inject", name = "javax.inject", version.ref = "javax-inject" }

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
android-test = { id = "com.android.test", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
hilt-android = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
firebase-crashlytics = { id = "com.google.firebase.crashlytics", version.ref = "firebase-crashlytics" }
firebase-appdistribution = { id = "com.google.firebase.appdistribution", version.ref = "appdistribution" }
navigation-safeargs-kotlin = { id = "androidx.navigation.safeargs.kotlin", version.ref = "navVersion" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
google-services = { id = "com.google.gms.google-services", version.ref = "googleService" }
baselineprofile = { id = "androidx.baselineprofile", version.ref = "baselineprofile" }
protobuf = { id = "com.google.protobuf", version.ref = "protobuf-plugin" }
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlint" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }

b1ink-android-application = { id = "kr.b1ink.android.application", version = "unspecified" }
b1ink-android-compose = { id = "kr.b1ink.android.compose", version = "unspecified" }
b1ink-android-library = { id = "kr.b1ink.android.library", version = "unspecified" }
b1ink-android-hilt = { id = "kr.b1ink.android.hilt", version = "unspecified" }
b1ink-kotlin = { id = "kr.b1ink.kotlin", version = "unspecified" }
b1ink-java-library = { id = "kr.b1ink.java.library", version = "unspecified" }
b1ink-android-data = { id = "kr.b1ink.android.data", version = "unspecified" }

[bundles]
markwon = [
    "markwon-core",
    "markwon-ext-tables",
    "markwon-ext-strikethrough",
    "markwon-html",
    "markwon-linkify",
    "markwon-image",
    "markwon-image-coil",
]

coil3 = [
    "coil3-compose",
    "coil3-okhttp",
    "coil3-gif",
    "coil3-video",
]

coil = [
    "coil-compose",
    "coil-gif",
    "coil-video",
]

kotlinx-coroutines = [
    "kotlinx-coroutines",
    "kotlinx-coroutines-core",
]

androidx-lifecycle = [
    "androidx-lifecycle",
    "androidx-lifecycle-livedata",
    "androidx-lifecycle-runtime",
    "androidx-lifecycle-service",
    "androidx-lifecycle-process",
]

compose = [
    "compose-ui",
    "compose-ui-graphics",
    "compose-ui-tooling-preview",
    "compose-material3",
#    "coil-compose",
    "compose-foundation-android",
    "activity-compose",
    "lifecycle-compose",
    "constraintlayout-compose",
    "navigation-compose",
    "hilt-navigation-compose",
#    "compose-runtime-tracing",
]
compose-debug = [
    "compose-ui-tooling",
    "compose-ui-test-manifest"
]

kotpref = [
    "kotpref",
    "kotprefLiveData",
    "kotprefGson",
    "kotprefEnum",
]

retrofit = [
    "retrofit",
    "retrofit-gsonConverter",
    "retrofit-scalarsConverter",
    "gson",
    "jsoup",
    "persistentcookiejar",
    "okhttp",
    "okhttp-logging-interceptor",
]

mvi = [
    "orbit-core",
    "orbit-viewmodel",
    "orbit-compose",
]